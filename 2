# 2)	Реализовать проект расчета суммарного расхода ткани на производство одежды.
# Основная сущность (класс) этого проекта — одежда, которая может иметь определенное название.
# К типам одежды в этом проекте относятся пальто и костюм. У этих типов одежды существуют параметры:
# размер (для пальто) и рост (для костюма). Это могут быть обычные числа: V и H, соответственно.
# Для определения расхода ткани по каждому типу одежды использовать формулы: для пальто (V/6.5 + 0.5), для костюма (2*H + 0.3).
# Проверить работу этих методов на реальных данных.
# Реализовать общий подсчет расхода ткани.
# Проверить на практике полученные на этом уроке знания:
# реализовать абстрактные классы для основных классов проекта, проверить на практике работу декоратора @property. - !!!! не разобрался

"""

Проект расчета суммарного расхода ткани

"""
from abc import ABC, abstractmethod


class Clothes(ABC):
    def __init__(self, size, height):
        self.size = size
        self.height = height

    def v_tissue_consumption(self):  # Расчет расхода ткани от размера
        return self.size / 6.5 + 0.5

    def h_tissue_consumption(self):  # Расчет расхода ткани от роста
        return self.height * 2 + 0.3
    @abstractmethod
    def my_fuc(self):
        pass

class Coat(Clothes):
    def __init__(self, size, height, model):
        super().__init__(size, height)
        self.model = model
        self.coat_consumption = round(Clothes.v_tissue_consumption(self))

    def __add__(self, other):
        return f'Общий расход ткани на пальто - {self.coat_consumption + other.coat_consumption} у.е.'

    def __str__(self):
        return f'Расход ткани на все пальто {self.model} - {self.coat_consumption} у.е.'


    def my_fuc(self):
        pass

class Jacket(Clothes):
    def __init__(self, size, height, model):
        super().__init__(size, height)
        self.model = model

        self.j_consumption = round(Clothes.h_tissue_consumption(self))

    def __add__(self, other):
        return f'Общий расход ткани на все костюмы - {self.j_consumption + other.j_consumption} у.е.'

    def __str__(self):
        return f'Расход ткани на костюм {self.model} - {self.j_consumption} у.е.'
    def my_fuc(self):
        pass

coat = Coat(50, 1.85, 'GUCCI')
coat2 = Coat(55, 2, 'GUCCI2')

print(coat)
print(coat2)
print(coat + coat2)
print()

jacket = Jacket(48, 1.8, 'Hugo Boss')
jacket2 = Jacket(50, 1.5, 'Brioni')

print(jacket)
print(jacket2)
print(jacket + jacket2)

