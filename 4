# 4)	Реализуйте базовый класс Car. +
# У данного класса должны быть следующие атрибуты: speed, color, name, is_police (булево).
# А также методы: go, stop, turn(direction), которые должны сообщать, что машина поехала, остановилась, повернула (куда).
# Опишите несколько дочерних классов: TownCar, SportCar, WorkCar, PoliceCar.
# Добавьте в базовый класс метод show_speed, который должен показывать текущую скорость автомобиля.
# Для классов TownCar и WorkCar переопределите метод show_speed.
# При значении скорости свыше 60 (TownCar) и 40 (WorkCar) должно выводиться сообщение о превышении скорости.
# Создайте экземпляры классов, передайте значения атрибутов. Выполните доступ к атрибутам, выведите результат.
# Выполните вызов методов и также покажите результат.

class Car:
    def __init__(self, speed, color, name, is_police):
        self.speed = speed
        self.color = color
        self.name = name
        self.is_police = is_police
    def go(self):
        return f'Машина {self.name} цвет {self.color}  поехала '

    def stop(self):
        return f'Машина {self.name} цвет {self.color} остановилась'

    def turn_right(self):
        return f'машина {self.name} цвет {self.color} повернула на право'
    def turn_left(self):
        return f'машина {self.name} цвет {self.color} повернула на лево'
    def show_speed(self):
        return f'скорость - {self.speed}'

class TownCar(Car):
    def __init__(self, speed, color, name, is_police):
        super().__init__(speed, color, name, is_police)

    def show_speed(self):
        print(f'текущая скорость автомобиля - {self.speed}')
        if self.speed > 60:
            print(f'скорость превышена')
class SportCar(Car):
    def __init__(self, speed, color, name, is_police, _max_speed):
        super().__init__(speed, color, name, is_police)
        self._max_speed = _max_speed
    def car_info(self):
        if self.is_police == True:
            print(f'полицейская машина {self.name}, цвет - {self.color}, максимальная скорость {self._max_speed} км/ч ')
        else:
            print(f' {self.name}, цвет - {self.color}, максимальная скорость {self._max_speed} км/ч')

class WorkCar(Car):
    def __init__(self, speed, color, name, is_police):
        super().__init__(speed, color, name, is_police)


    def show_speed(self):
        print(f'текущая скорость автомобиля - {self.speed}')
        if self.speed > 40:
            print(f'скорость превышена')
class PoliceCar(Car):
    def __init__(self, speed, color, name, is_police, _max_speed):
        super().__init__(speed, color, name, is_police)
        self._max_speed = _max_speed
    def car_info(self):
        print(f'полицейская машина {self.name}, цвет - {self.color}, максимальная скорость {self._max_speed} км/ч ')


mazda = TownCar(70, 'красный', 'Мазда', False)
# print(mazda.go())
# mazda.show_speed()
# print(mazda.turn_left())
# print(mazda.turn_right())
# print(mazda.stop())


isuzu = WorkCar(30, 'белый', 'isuzu', False)

# print(isuzu.go())
# isuzu.show_speed()
# print(isuzu.turn_left())
# print(isuzu.turn_right())
# print(isuzu.stop())

ferrari = SportCar(250, 'черный', 'ferrari', True, 325)
print(ferrari.go())

print(ferrari.turn_left())
print(ferrari.turn_right())
print(ferrari.stop())
ferrari.car_info()

uaz = PoliceCar(60, 'серый', 'УАЗ',  True, 150)
# print(uaz.go())
# print(uaz.turn_left())
# print(uaz.turn_right())
# print(uaz.stop())
# uaz.car_info()
